Dog: type, int = {
	constructor
}

MyList: class(T) => {
	return this;
}

Dog.addPublicMethod('methodName', (x: union([int, float])) => {

})

attrs = [
	to(int),
	to(float),
	binaryOp+(float, float)
]

myFunc2: func<i32> = (x: implements(attrs)) => {

}

typedef intflot = union(int, float);


myFunc: int = (x: [int], y: table(int), z: int) => {

	sum: float = 0;
	
	for item in x {
		sum += x.to(float)
	}
	return sum.to(int);
}


